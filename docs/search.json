[{"path":"https://djghosh1123.github.io/LRST/articles/LRST_tutorial.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"LRST_tutorial","text":"LRST package implements Longitudinal Rank-Sum Test analyzing longitudinal clinical trial data.","code":""},{"path":"https://djghosh1123.github.io/LRST/articles/LRST_tutorial.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"LRST_tutorial","text":"can install package using: lrst.2arm function perform LRST placebo treatment data, lrst.MultiArm perform LRST multi-arm clinical trials. perfomring LRST let us see data look like.","code":"knitr::opts_chunk$set(echo = TRUE) library(LRST) library(MASS)"},{"path":"https://djghosh1123.github.io/LRST/articles/LRST_tutorial.html","id":"simulated-data-generation","dir":"Articles","previous_headings":"","what":"Simulated Data Generation","title":"LRST_tutorial","text":"code generates mean standard deviation curves plaecbo group. numbers taken BAPI 302 trial. Now let’s provide dimentions simulation. Let’s define temporal covariance structure two outcomes.Suppose correlation outcomes 0.5. Let’s get treatment mean curve, standard deviations assumed placebo group. Finally Let’s simulate data. Let’s perform LRST generated data. Let’s get estimated power. Let’s conduct Multi-Arm LRST.","code":"xm = -t(cbind(c(0, 0.738, 1.313, 3.109, 4.525, 5.864, 7.338),               c(0, 0.668, 3.975, 5.931, 8.259, 11.989, 13.976)))  xs = t(cbind(c(0, 4.79, 5.43, 6.54, 7.37, 8.15, 9.11),              c(0, 10.27, 12.85, 14.95, 15.35, 16.87, 18.19))) N = 500 # Total Number of Patients nx = 2/5*N # Niumber of patients in Placebo ny = 3/5*N # Number of patients in Treatment K = 2 # Number of Outcomes T = 6 # Number of visits other than baseline sigma_u <- c(3.477, 7.232) # Random Effect Standard Deviation for Outcomes  corr <- matrix(c(1,0.5, 0.5, 1),2,2)  # Correlation between the outcomes  sigma = diag(sigma_u) %*% corr %*% diag(sigma_u) alpha=1 beta=1 effect_size_1 = 2.21*alpha/6 effect_size_2 = 5.38*beta/6  ym = xm + t(cbind(c(0,(rep(effect_size_1,6))), c(0,(rep(effect_size_2,6))))) X_placebo = array(NA, dim = c(nx, 2, 7)) X_dose_1 = array(NA, dim = c(ny, 2, 7))  for(i in 1:nx){   X_placebo[i,,] = gen.fun.dep(xm, xs, corr, sigma) }  for(i in 1:ny){   X_dose_1[i,,] = gen.fun.dep(ym, xs, corr, sigma) }  X_c = X_placebo Y_c = X_dose_1 dim(X_c) #> [1] 200   2   7 dim(Y_c) #> [1] 300   2   7 lrst.2arm(X_c, Y_c) #> $T.stat #> [1] 2.755395 #>  #> $T.sd #> [1] 4.665001 #>  #> $p.value #> [1] 0.1010259 estimated_Power(0.05, X_c, Y_c) #> [1] 0.3603591 X_dose_2 = array(NA, dim = c(ny, 2, 7)) for(i in 1:ny){   X_dose_2[i,,] = gen.fun.dep(ym, xs, corr, sigma) } X_c = X_placebo Y = vector(length = 2, mode = \"list\") Y[[1]] = X_dose_1 Y[[2]] = X_dose_2 lrst.MultiArm(X_c, Y) #> $p #> [1] 0.21295 #>  #> $v #> [1] 1 #>  #> $T #> [1] 1.182128"},{"path":"https://djghosh1123.github.io/LRST/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dhrubajyoti Ghosh. Maintainer.","code":""},{"path":"https://djghosh1123.github.io/LRST/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ghosh D, Xu X, Luo S (2025). LRST: R package Longitudinal Rank Sum Test (LRST). R package version 0.1.0, https://djghosh1123.github.io/LRST, https://github.com/djghosh1123/LRST.","code":"@Manual{,   title = {LRST: A R package for Longitudinal Rank Sum Test (LRST)},   author = {Dhrubajyoti Ghosh and Xiaoming Xu and Sheng Luo},   year = {2025},   note = {R package version 0.1.0, https://djghosh1123.github.io/LRST},   url = {https://github.com/djghosh1123/LRST}, }"},{"path":"https://djghosh1123.github.io/LRST/index.html","id":"lrst-longitudinal-rank-sum-test-for-multivariate-longitudinal-data","dir":"","previous_headings":"","what":"LRST","title":"LRST","text":"LRST R package implements Longitudinal Rank-Sum Test, nonparametric, rank-based omnibus test statistic designed comprehensive assessment treatment efficacy across multiple longitudinal primary endpoints clinical trials. effectively controls Type error enhancing statistical power, offering flexibility various data distributions encountered clinical research.","code":""},{"path":"https://djghosh1123.github.io/LRST/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"LRST","text":"Comprehensive Assessment: Evaluates treatment effects across multiple endpoints time points without requiring multiplicity adjustments. Enhanced Statistical Power: Effectively controls Type error, reducing need larger sample sizes. Flexibility: Robust various data distributions, making suitable complex clinical trial data. Efficient Data Utilization: Maximizes use longitudinal data, capturing dynamic changes across multiple endpoints.","code":""},{"path":"https://djghosh1123.github.io/LRST/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"LRST","text":"can install package using:","code":"knitr::opts_chunk$set(echo = TRUE) # install.packages(\"devtools\") devtools::install_github(\"djghosh1123/LRST\") #> Using GitHub PAT from the git credential store. #> Skipping install of 'LRST' from a github remote, the SHA1 (406a0e07) has not changed since last install. #>   Use `force = TRUE` to force installation library(LRST)"},{"path":"https://djghosh1123.github.io/LRST/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"LRST","text":"lrst.2arm function perform LRST placebo treatment data, lrst.MultiArm perform LRST multi-arm clinical trials. perfomring LRST let us see data look like.","code":""},{"path":"https://djghosh1123.github.io/LRST/index.html","id":"simulated-data-generation","dir":"","previous_headings":"","what":"Simulated Data Generation","title":"LRST","text":"code generates mean standard deviation curves plaecbo group. numbers taken BAPI 302 trial. Now let’s provide dimentions simulation. Let’s define temporal covariance structure two outcomes.Suppose correlation outcomes 0.5. Let’s get treatment mean curve, standard deviations assumed placebo group. Finally Let’s simulate data. Let’s perform LRST generated data. Let’s get estimated power. Let’s conduct Multi-Arm LRST.","code":"xm = -t(cbind(c(0, 0.738, 1.313, 3.109, 4.525, 5.864, 7.338),               c(0, 0.668, 3.975, 5.931, 8.259, 11.989, 13.976)))  xs = t(cbind(c(0, 4.79, 5.43, 6.54, 7.37, 8.15, 9.11),              c(0, 10.27, 12.85, 14.95, 15.35, 16.87, 18.19))) N = 500 # Total Number of Patients nx = 2/5*N # Niumber of patients in Placebo ny = 3/5*N # Number of patients in Treatment K = 2 # Number of Outcomes T = 6 # Number of visits other than baseline sigma_u <- c(3.477, 7.232) # Random Effect Standard Deviation for Outcomes  corr <- matrix(c(1,0.5, 0.5, 1),2,2)  # Correlation between the outcomes  sigma = diag(sigma_u) %*% corr %*% diag(sigma_u) alpha=1 beta=1 effect_size_1 = 2.21*alpha/6 effect_size_2 = 5.38*beta/6  ym = xm + t(cbind(c(0,(rep(effect_size_1,6))), c(0,(rep(effect_size_2,6))))) X_placebo = array(NA, dim = c(nx, 2, 7)) X_dose_1 = array(NA, dim = c(ny, 2, 7))  for(i in 1:nx){   X_placebo[i,,] = gen.fun.dep(xm, xs, corr, sigma) }  for(i in 1:ny){   X_dose_1[i,,] = gen.fun.dep(ym, xs, corr, sigma) }  X_c = X_placebo Y_c = X_dose_1 dim(X_c) #> [1] 200   2   7 dim(Y_c) #> [1] 300   2   7 lrst.2arm(X_c, Y_c) #> $T.stat #> [1] 1.080766 #>  #> $T.sd #> [1] 4.800963 #>  #> $p.value #> [1] 0.3109178 estimated_Power(0.05, X_c, Y_c) #> [1] 0.1274444 X_dose_2 = array(NA, dim = c(ny, 2, 7)) for(i in 1:ny){   X_dose_2[i,,] = gen.fun.dep(ym, xs, corr, sigma) } X_c = X_placebo Y = vector(length = 2, mode = \"list\") Y[[1]] = X_dose_1 Y[[2]] = X_dose_2 lrst.MultiArm(X_c, Y) #> $p #> [1] 0.07858 #>  #> $v #> [1] 2 #>  #> $T #> [1] 1.730265"},{"path":"https://djghosh1123.github.io/LRST/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"LRST","text":"use paper, please cite: Xu, X., Ghosh, D., Luo, S., & CPP Integrated Parkinson’s Database. (2025). novel longitudinal rank-sum test multiple primary endpoints clinical trials: Applications neurodegenerative disorders. Statistics Biopharmaceutical Research, (just-accepted), 1-17.","code":""},{"path":"https://djghosh1123.github.io/LRST/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Dhrubajyoti Ghosh Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/C.gen.hat.html","id":null,"dir":"Reference","previous_headings":"","what":"Title Estimate C and D matrix from the data — C.gen.hat","title":"Title Estimate C and D matrix from the data — C.gen.hat","text":"Title Estimate C D matrix data","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/C.gen.hat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title Estimate C and D matrix from the data — C.gen.hat","text":"","code":"C.gen.hat(X_c, Y_c)"},{"path":"https://djghosh1123.github.io/LRST/reference/C.gen.hat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title Estimate C and D matrix from the data — C.gen.hat","text":"X_c Longitudinal Data placebo dimension \\((n_x, K, T)\\), \\(n_x\\) number patients placebo group, K number outcomes, T number time points Y_c Longitudinal Data Treatment dimension \\((n_y, K, T)\\), \\(n_y\\) number patients treatment group, K number outcomes, T number time points","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/C.gen.hat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title Estimate C and D matrix from the data — C.gen.hat","text":"C.hat gives estimated C matrix D.hat gives estimated D matrix","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/C.gen.hat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title Estimate C and D matrix from the data — C.gen.hat","text":"","code":"library(MASS) xm = -t(cbind(c(0, 0.738, 1.313, 3.109, 4.525, 5.864, 7.338),           c(0, 0.668, 3.975, 5.931, 8.259, 11.989, 13.976))) xs = t(cbind(c(0, 4.79, 5.43, 6.54, 7.37, 8.15, 9.11),           c(0, 10.27, 12.85, 14.95, 15.35, 16.87, 18.19))) N = 500 # Total Number of Patients nx = 2/5*N # Niumber of patients in Placebo ny = 3/5*N # Number of patients in Treatment K = 2 # Number of Outcomes T = 6 # Number of visits other than baseline sigma_u <- c(3.477, 7.232) # Random Effect Standard Deviation for Outcomes corr <- matrix(c(1,0.5, 0.5, 1),2,2)  # Correlation between the outcomes sigma = diag(sigma_u) %*% corr %*% diag(sigma_u) alpha=1 beta=1 effect_size_1 = 2.21*alpha/6 effect_size_2 = 5.38*beta/6 ym = xm + t(cbind(c(0,(rep(effect_size_1,6))), c(0,(rep(effect_size_2,6))))) X_placebo = array(NA, dim = c(nx, 2, 7)) X_dose_1 = array(NA, dim = c(ny, 2, 7))  for(i in 1:nx){   X_placebo[i,,] = gen.fun.dep(xm, xs, corr, sigma) } for(i in 1:ny){   X_dose_1[i,,] = gen.fun.dep(ym, xs, corr, sigma) } X_c = X_placebo Y_c = X_dose_1 C.gen.hat(X_c, Y_c) #> $C.hat #>      [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #> [1,]    0 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [2,]    0 0.2130596 0.1698735 0.1470860 0.1475105 0.1560858 0.1568483 #> [3,]    0 0.1698735 0.2091478 0.1795074 0.1748380 0.1794418 0.1743211 #> [4,]    0 0.1470860 0.1795074 0.1981698 0.1897152 0.1935330 0.1869953 #> [5,]    0 0.1475105 0.1748380 0.1897152 0.2119425 0.2146928 0.2094748 #> [6,]    0 0.1560858 0.1794418 0.1935330 0.2146928 0.2414673 0.2326548 #> [7,]    0 0.1568483 0.1743211 0.1869953 0.2094748 0.2326548 0.2436077 #>  #> $D.hat #>      [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #> [1,]    0 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [2,]    0 0.1748330 0.1487409 0.1383331 0.1358811 0.1271632 0.1280852 #> [3,]    0 0.1487409 0.2027201 0.1885298 0.1782071 0.1664165 0.1658702 #> [4,]    0 0.1383331 0.1885298 0.2183791 0.1987760 0.1843128 0.1806712 #> [5,]    0 0.1358811 0.1782071 0.1987760 0.2138739 0.1929833 0.1896677 #> [6,]    0 0.1271632 0.1664165 0.1843128 0.1929833 0.1999756 0.1956678 #> [7,]    0 0.1280852 0.1658702 0.1806712 0.1896677 0.1956678 0.2092622 #>"},{"path":"https://djghosh1123.github.io/LRST/reference/C.gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Title Theoretical C and D matrix under assumption of Gaussianity — C.gen","title":"Title Theoretical C and D matrix under assumption of Gaussianity — C.gen","text":"Title Theoretical C D matrix assumption Gaussianity","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/C.gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title Theoretical C and D matrix under assumption of Gaussianity — C.gen","text":"","code":"C.gen(xm, ym, xs, corr = 0.5, n.iter = 1000)"},{"path":"https://djghosh1123.github.io/LRST/reference/C.gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title Theoretical C and D matrix under assumption of Gaussianity — C.gen","text":"xm Mean Matrix Placebo ym Mean Matrix Treatment xs Standard Deviation matrix corr Correlation outcomes. n.iter Number iterations","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/C.gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title Theoretical C and D matrix under assumption of Gaussianity — C.gen","text":"C: Theoretical C Gaussianity Assumption, D: Theoretical D Gaussianity assumption","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/C.gen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title Theoretical C and D matrix under assumption of Gaussianity — C.gen","text":"","code":"xm = -t(cbind(c(0, 0.738, 1.313, 3.109, 4.525, 5.864, 7.338),           c(0, 0.668, 3.975, 5.931, 8.259, 11.989, 13.976))) xs = t(cbind(c(0, 4.79, 5.43, 6.54, 7.37, 8.15, 9.11),           c(0, 10.27, 12.85, 14.95, 15.35, 16.87, 18.19))) alpha=1 beta=1 effect_size_1 = 2.21*alpha/6 effect_size_2 = 5.38*beta/6 ym = xm + t(cbind(c(0,(rep(effect_size_1,6))), c(0,(rep(effect_size_2,6))))) C.gen(xm, ym, xs, n.iter=10) #> $C #>           [,1]      [,2]      [,3]      [,4]      [,5]      [,6] #> [1,] 0.3209077 0.3191373 0.3202787 0.3224821 0.3198759 0.3222927 #> [2,] 0.3203815 0.3197951 0.3196591 0.3224807 0.3224591 0.3213256 #> [3,] 0.3200584 0.3203148 0.3203218 0.3218043 0.3216900 0.3223585 #> [4,] 0.3205726 0.3209949 0.3206170 0.3212945 0.3229912 0.3206036 #> [5,] 0.3206823 0.3216464 0.3195295 0.3204054 0.3224209 0.3197607 #> [6,] 0.3210736 0.3199761 0.3208121 0.3220017 0.3211203 0.3191869 #>  #> $D #>           [,1]      [,2]      [,3]      [,4]      [,5]      [,6] #> [1,] 0.3191752 0.3202531 0.3219140 0.3203281 0.3214821 0.3214983 #> [2,] 0.3199125 0.3187930 0.3204907 0.3203946 0.3211722 0.3192914 #> [3,] 0.3206190 0.3192049 0.3192646 0.3213533 0.3220137 0.3220817 #> [4,] 0.3207663 0.3225235 0.3198931 0.3215526 0.3205296 0.3214093 #> [5,] 0.3220007 0.3216352 0.3213194 0.3191158 0.3211502 0.3219256 #> [6,] 0.3224811 0.3226684 0.3202296 0.3224309 0.3226069 0.3211046 #>"},{"path":"https://djghosh1123.github.io/LRST/reference/discretize.html","id":null,"dir":"Reference","previous_headings":"","what":"Title Discretize Continuous Data into discrete bins — discretize","title":"Title Discretize Continuous Data into discrete bins — discretize","text":"Title Discretize Continuous Data discrete bins","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/discretize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title Discretize Continuous Data into discrete bins — discretize","text":"","code":"discretize(X)"},{"path":"https://djghosh1123.github.io/LRST/reference/discretize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title Discretize Continuous Data into discrete bins — discretize","text":"X Longitudinal Data continuous outcomes","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/discretize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title Discretize Continuous Data into discrete bins — discretize","text":"Longitudinal Data discretized outcomes","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/discretize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title Discretize Continuous Data into discrete bins — discretize","text":"","code":"library(MASS) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following object is masked from 'package:MASS': #>  #>     select #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union xm = -t(cbind(   c(0, 0.738, 1.313, 3.109, 4.525, 5.864, 7.338),   c(0, 0.668, 3.975, 5.931, 8.259, 11.989, 13.976) )) xs = t(cbind(   c(0, 4.79, 5.43, 6.54, 7.37, 8.15, 9.11),   c(0, 10.27, 12.85, 14.95, 15.35, 16.87, 18.19) )) N = 100 # Total Number of Patients nx = 2/5*N # Niumber of patients in Placebo ny = 3/5*N # Number of patients in Treatment K = 2 # Number of Outcomes T = 6 # Number of visits other than baseline sigma_u <- c(3.477, 7.232) # Random Effect Standard Deviation for Outcomes corr <- matrix(c(1,0.5, 0.5, 1),2,2)  # Correlation between the outcomes sigma = diag(sigma_u) %*% corr %*% diag(sigma_u) alpha=1 beta=1 effect_size_1 = 2.21*alpha/6 effect_size_2 = 5.38*beta/6 ym = xm + t(cbind(c(0,(rep(effect_size_1,6))), c(0,(rep(effect_size_2,6))))) X_placebo = array(NA, dim = c(nx, 2, 7)) X_dose_1 = array(NA, dim = c(ny, 2, 7))  for(i in 1:nx){   X_placebo[i,,] = gen.fun.dep(xm, xs, corr, sigma) } for(i in 1:ny){   X_dose_1[i,,] = gen.fun.dep(ym, xs, corr, sigma) } X_c = X_placebo Y_c = X_dose_1 X_d = discretize(X_c) #> Error: object 'xm' not found"},{"path":"https://djghosh1123.github.io/LRST/reference/estimated_Power.html","id":null,"dir":"Reference","previous_headings":"","what":"Title Estimate of Power from the data — estimated_Power","title":"Title Estimate of Power from the data — estimated_Power","text":"Title Estimate Power data","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/estimated_Power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title Estimate of Power from the data — estimated_Power","text":"","code":"estimated_Power(alpha = 0.05, X_c, Y_c)"},{"path":"https://djghosh1123.github.io/LRST/reference/estimated_Power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title Estimate of Power from the data — estimated_Power","text":"alpha Size Test X_c Longitudinal Data placebo dimension (nx, K, T), nx number patients placebo group, K number outcomes, T number time points Y_c Longitudinal Data Treatment dimension (ny, K, T), ny number patients treatment group, K number outcomes, T number time points","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/estimated_Power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title Estimate of Power from the data — estimated_Power","text":"Estimated Power data","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/estimated_Power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title Estimate of Power from the data — estimated_Power","text":"","code":"library(MASS) xm = -t(cbind(c(0, 0.738, 1.313, 3.109, 4.525, 5.864, 7.338),           c(0, 0.668, 3.975, 5.931, 8.259, 11.989, 13.976))) xs = t(cbind(c(0, 4.79, 5.43, 6.54, 7.37, 8.15, 9.11),           c(0, 10.27, 12.85, 14.95, 15.35, 16.87, 18.19))) N = 500 # Total Number of Patients nx = 2/5*N # Niumber of patients in Placebo ny = 3/5*N # Number of patients in Treatment K = 2 # Number of Outcomes T = 6 # Number of visits other than baseline sigma_u <- c(3.477, 7.232) # Random Effect Standard Deviation for Outcomes corr <- matrix(c(1,0.5, 0.5, 1),2,2)  # Correlation between the outcomes sigma = diag(sigma_u) %*% corr %*% diag(sigma_u) alpha=1 beta=1 effect_size_1 = 2.21*alpha/6 effect_size_2 = 5.38*beta/6 ym = xm + t(cbind(c(0,(rep(effect_size_1,6))), c(0,(rep(effect_size_2,6))))) X_placebo = array(NA, dim = c(nx, 2, 7)) X_dose_1 = array(NA, dim = c(ny, 2, 7))  for(i in 1:nx){   X_placebo[i,,] = gen.fun.dep(xm, xs, corr, sigma) } for(i in 1:ny){   X_dose_1[i,,] = gen.fun.dep(ym, xs, corr, sigma) } X_c = X_placebo Y_c = X_dose_1 C.gen.hat(X_c, Y_c) #> $C.hat #>      [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #> [1,]    0 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [2,]    0 0.1858960 0.1565563 0.1450974 0.1370631 0.1340145 0.1273275 #> [3,]    0 0.1565563 0.1946315 0.1753889 0.1672889 0.1578682 0.1485454 #> [4,]    0 0.1450974 0.1753889 0.1963280 0.1832724 0.1755310 0.1654889 #> [5,]    0 0.1370631 0.1672889 0.1832724 0.2013738 0.1904122 0.1817732 #> [6,]    0 0.1340145 0.1578682 0.1755310 0.1904122 0.2099745 0.1980152 #> [7,]    0 0.1273275 0.1485454 0.1654889 0.1817732 0.1980152 0.2098051 #>  #> $D.hat #>      [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #> [1,]    0 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [2,]    0 0.1900142 0.1634928 0.1514841 0.1455959 0.1349232 0.1292198 #> [3,]    0 0.1634928 0.2137997 0.1942236 0.1885475 0.1732515 0.1631944 #> [4,]    0 0.1514841 0.1942236 0.2257035 0.2090158 0.1917100 0.1783396 #> [5,]    0 0.1455959 0.1885475 0.2090158 0.2278281 0.2085668 0.1974241 #> [6,]    0 0.1349232 0.1732515 0.1917100 0.2085668 0.2175578 0.2041294 #> [7,]    0 0.1292198 0.1631944 0.1783396 0.1974241 0.2041294 0.2121668 #>  estimated_Power(0.05, X_c, Y_c) #> [1] 0.7815231"},{"path":"https://djghosh1123.github.io/LRST/reference/gen.fun.dep.html","id":null,"dir":"Reference","previous_headings":"","what":"Title Generate Data for Multiple outcomes. — gen.fun.dep","title":"Title Generate Data for Multiple outcomes. — gen.fun.dep","text":"Title Generate Data Multiple outcomes.","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/gen.fun.dep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title Generate Data for Multiple outcomes. — gen.fun.dep","text":"","code":"gen.fun.dep(xm, xs, corln, Sigma)"},{"path":"https://djghosh1123.github.io/LRST/reference/gen.fun.dep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title Generate Data for Multiple outcomes. — gen.fun.dep","text":"xm mean matrix element (,j) giving mean outcome time j. xs s.d. matrix element (,j) giving s.d. outcome time j. corln Correlation matrix outcomes. Sigma Covariance Matrix Random Effect","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/gen.fun.dep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title Generate Data for Multiple outcomes. — gen.fun.dep","text":"Longitudinal Data multiple outcomes","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/gen.fun.dep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Title Generate Data for Multiple outcomes. — gen.fun.dep","text":"function used inside -loop simulate repeated measures per subject","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/gen.fun.dep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title Generate Data for Multiple outcomes. — gen.fun.dep","text":"","code":"# Example: simulate 1 subject with 7 visits library(MASS) M <- -t(cbind(   c(0, 0.738, 1.313, 3.109, 4.525, 5.864, 7.338),   c(0, 0.668, 3.975, 5.931, 8.259, 11.989, 13.976) ))  S <- t(cbind(   c(0, 4.79, 5.43, 6.54, 7.37, 8.15, 9.11),   c(0, 10.27, 12.85, 14.95, 15.35, 16.87, 18.19) ))  Sigma <- matrix(c(3.477^2, 0, 0, 3.477^2), nrow = 2) corr <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)  gen.fun.dep(M, S, corr, Sigma) #>      [,1]     [,2]      [,3]      [,4]       [,5]       [,6]       [,7] #> [1,]    0 4.050430  2.653254  6.649710   5.906508   3.539927   8.599772 #> [2,]    0 1.766491 14.825540 -8.730003 -21.132800 -35.542716 -45.155009"},{"path":"https://djghosh1123.github.io/LRST/reference/lmmFun4.html","id":null,"dir":"Reference","previous_headings":"","what":"Title Linear Mixed Effect Model Efficacy Test — lmmFun4","title":"Title Linear Mixed Effect Model Efficacy Test — lmmFun4","text":"Title Linear Mixed Effect Model Efficacy Test","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/lmmFun4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title Linear Mixed Effect Model Efficacy Test — lmmFun4","text":"","code":"lmmFun4(X_c, Y_c)"},{"path":"https://djghosh1123.github.io/LRST/reference/lmmFun4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title Linear Mixed Effect Model Efficacy Test — lmmFun4","text":"X_c Longitudinal Data placebo dimension (nx, K, T), nx number patients placebo gorup, K number outcomes, T number time points Y_c Longitudinal Data Treatment dimension (ny, K, T), ny number patients treatment gorup, K number outcomes, T number time points","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/lmmFun4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title Linear Mixed Effect Model Efficacy Test — lmmFun4","text":"vector p-values, length number outcomes","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/lmmFun4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title Linear Mixed Effect Model Efficacy Test — lmmFun4","text":"","code":"library(MASS) library(lme4) #> Warning: package 'lme4' was built under R version 4.4.3 #> Loading required package: Matrix #> Warning: package 'Matrix' was built under R version 4.4.3 xm = -t(cbind(c(0, 0.738, 1.313, 3.109, 4.525, 5.864, 7.338),           c(0, 0.668, 3.975, 5.931, 8.259, 11.989, 13.976))) xs = t(cbind(c(0, 4.79, 5.43, 6.54, 7.37, 8.15, 9.11),           c(0, 10.27, 12.85, 14.95, 15.35, 16.87, 18.19))) N = 100 # Total Number of Patients nx = 2/5*N # Niumber of patients in Placebo ny = 3/5*N # Number of patients in Treatment K = 2 # Number of Outcomes T = 6 # Number of visits other than baseline sigma_u <- c(3.477, 7.232) # Random Effect Standard Deviation for Outcomes corr <- matrix(c(1,0.5, 0.5, 1),2,2)  # Correlation between the outcomes sigma = diag(sigma_u) %*% corr %*% diag(sigma_u) alpha=1 beta=1 effect_size_1 = 2.21*alpha/6 effect_size_2 = 5.38*beta/6 ym = xm + t(cbind(c(0,(rep(effect_size_1,6))), c(0,(rep(effect_size_2,6))))) X_placebo = array(NA, dim = c(nx, 2, 7)) X_dose_1 = array(NA, dim = c(ny, 2, 7))  for(i in 1:nx){   X_placebo[i,,] = gen.fun.dep(xm, xs, corr, sigma) } for(i in 1:ny){   X_dose_1[i,,] = gen.fun.dep(ym, xs, corr, sigma) } X_c = X_placebo Y_c = X_dose_1 lmmFun4(X_c, Y_c) #> refitting model(s) with ML (instead of REML) #> refitting model(s) with ML (instead of REML) #> [1] 0.1674288 0.6941548"},{"path":"https://djghosh1123.github.io/LRST/reference/lrst.2arm.html","id":null,"dir":"Reference","previous_headings":"","what":"Title Longitudinal Rank Sum Test for Two-Arm Clinical Trial (Placebo and Treatment) — lrst.2arm","title":"Title Longitudinal Rank Sum Test for Two-Arm Clinical Trial (Placebo and Treatment) — lrst.2arm","text":"Title Longitudinal Rank Sum Test Two-Arm Clinical Trial (Placebo Treatment)","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/lrst.2arm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title Longitudinal Rank Sum Test for Two-Arm Clinical Trial (Placebo and Treatment) — lrst.2arm","text":"","code":"lrst.2arm(X_c, Y_c)"},{"path":"https://djghosh1123.github.io/LRST/reference/lrst.2arm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title Longitudinal Rank Sum Test for Two-Arm Clinical Trial (Placebo and Treatment) — lrst.2arm","text":"X_c Longitudinal Data placebo dimension \\((n_x, K, T)\\), \\(n_x\\) number patients placebo group, K number outcomes, T number time points Y_c Longitudinal Data Treatment dimension \\((n_y, K, T)\\), \\(n_y\\) number patients treatment group, K number outcomes, T number time points","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/lrst.2arm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title Longitudinal Rank Sum Test for Two-Arm Clinical Trial (Placebo and Treatment) — lrst.2arm","text":"list containing: T.stat: Test Statistic T.sd: Standard Error.. p.value: p-value","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/lrst.2arm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Title Longitudinal Rank Sum Test for Two-Arm Clinical Trial (Placebo and Treatment) — lrst.2arm","text":"Xu, X., Ghosh, D., Luo, S.(2025). novel longitudinal rank-sum test multiple primary endpoints clinical trials: Applications neurodegenerative disorders. Statistics Biopharmaceutical Research, 1-17.","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/lrst.2arm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title Longitudinal Rank Sum Test for Two-Arm Clinical Trial (Placebo and Treatment) — lrst.2arm","text":"","code":"library(MASS) xm = -t(cbind(c(0, 0.738, 1.313, 3.109, 4.525, 5.864, 7.338),           c(0, 0.668, 3.975, 5.931, 8.259, 11.989, 13.976))) xs = t(cbind(c(0, 4.79, 5.43, 6.54, 7.37, 8.15, 9.11),           c(0, 10.27, 12.85, 14.95, 15.35, 16.87, 18.19))) N = 100 # Total Number of Patients nx = 2/5*N # Niumber of patients in Placebo ny = 3/5*N # Number of patients in Treatment K = 2 # Number of Outcomes T = 6 # Number of visits other than baseline sigma_u <- c(3.477, 7.232) # Random Effect Standard Deviation for Outcomes corr <- matrix(c(1,0.5, 0.5, 1),2,2)  # Correlation between the outcomes sigma = diag(sigma_u) %*% corr %*% diag(sigma_u) alpha=1 beta=1 effect_size_1 = 2.21*alpha/6 effect_size_2 = 5.38*beta/6 ym = xm + t(cbind(c(0,(rep(effect_size_1,6))), c(0,(rep(effect_size_2,6))))) X_placebo = array(NA, dim = c(nx, 2, 7)) X_dose_1 = array(NA, dim = c(ny, 2, 7))  for(i in 1:nx){   X_placebo[i,,] = gen.fun.dep(xm, xs, corr, sigma) } for(i in 1:ny){   X_dose_1[i,,] = gen.fun.dep(ym, xs, corr, sigma) } X_c = X_placebo Y_c = X_dose_1 lrst.2arm(X_c, Y_c) #> $T.stat #> [1] 2.191667 #>  #> $T.sd #> [1] 4.546039 #>  #> $p.value #> [1] 0.1519945 #>"},{"path":"https://djghosh1123.github.io/LRST/reference/lrst.MultiArm.html","id":null,"dir":"Reference","previous_headings":"","what":"Title Longitudinal Rank Sum test for multi-arm Clinical Trial — lrst.MultiArm","title":"Title Longitudinal Rank Sum test for multi-arm Clinical Trial — lrst.MultiArm","text":"Title Longitudinal Rank Sum test multi-arm Clinical Trial","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/lrst.MultiArm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title Longitudinal Rank Sum test for multi-arm Clinical Trial — lrst.MultiArm","text":"","code":"lrst.MultiArm(X_c, Y)"},{"path":"https://djghosh1123.github.io/LRST/reference/lrst.MultiArm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title Longitudinal Rank Sum test for multi-arm Clinical Trial — lrst.MultiArm","text":"X_c Longitudinal Data placebo dimension \\((n_x, K, T)\\), \\(n_x\\) number patients placebo group, K number outcomes, T number time points Y list length , number arms. element Y longitudinal data corresponding treatment arm dimension \\((n_{y_i}, K, T)\\), \\(n_{y_i}\\) number patients \\(^{th}\\) treatment arm, K number outcomes, T number time points.","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/lrst.MultiArm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title Longitudinal Rank Sum test for multi-arm Clinical Trial — lrst.MultiArm","text":"list containing: p computed p-value v Proportion times  higher dose selected T Final test Statistic","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/lrst.MultiArm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Title Longitudinal Rank Sum test for multi-arm Clinical Trial — lrst.MultiArm","text":"Ghosh, D., Luo, S. (2024). non-parametric U-statistic testing approach multi-arm clinical trials multivariate longitudinal data. arXiv preprint arXiv:2408.10149.","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/lrst.MultiArm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title Longitudinal Rank Sum test for multi-arm Clinical Trial — lrst.MultiArm","text":"","code":"library(MASS) xm = -t(cbind(c(0, 0.738, 1.313, 3.109, 4.525, 5.864, 7.338),           c(0, 0.668, 3.975, 5.931, 8.259, 11.989, 13.976))) xs = t(cbind(c(0, 4.79, 5.43, 6.54, 7.37, 8.15, 9.11),           c(0, 10.27, 12.85, 14.95, 15.35, 16.87, 18.19))) N = 100 # Total Number of Patients nx = 2/5*N # Niumber of patients in Placebo ny = 3/5*N # Number of patients in Treatment K = 2 # Number of Outcomes T = 6 # Number of visits other than baseline sigma_u <- c(3.477, 7.232) # Random Effect Standard Deviation for Outcomes corr <- matrix(c(1,0.5, 0.5, 1),2,2)  # Correlation between the outcomes sigma = diag(sigma_u) %*% corr %*% diag(sigma_u) alpha=1 beta=1 effect_size_1 = 2.21*alpha/6 effect_size_2 = 5.38*beta/6 ym = xm + t(cbind(c(0,(rep(effect_size_1,6))), c(0,(rep(effect_size_2,6))))) X_placebo = array(NA, dim = c(nx, 2, 7)) X_dose_1 = array(NA, dim = c(ny, 2, 7)) X_dose_2 = array(NA, dim = c(ny, 2, 7))  for(i in 1:nx){   X_placebo[i,,] = gen.fun.dep(xm, xs, corr, sigma) } for(i in 1:ny){   X_dose_1[i,,] = gen.fun.dep(ym, xs, corr, sigma) } for(i in 1:ny){   X_dose_2[i,,] = gen.fun.dep(ym, xs, corr, sigma) } X_c = X_placebo Y = vector(length = 2, mode = \"list\") Y[[1]] = X_dose_1 Y[[2]] = X_dose_2 lrst.MultiArm(X_c, Y) #> $p #> [1] 0.73112 #>  #> $v #> [1] 1 #>  #> $T #> [1] -0.03914134 #>"},{"path":"https://djghosh1123.github.io/LRST/reference/npld.html","id":null,"dir":"Reference","previous_headings":"","what":"Title nparLD Test of Efficacy — npld","title":"Title nparLD Test of Efficacy — npld","text":"Title nparLD Test Efficacy","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/npld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title nparLD Test of Efficacy — npld","text":"","code":"npld(X_c, Y_c)"},{"path":"https://djghosh1123.github.io/LRST/reference/npld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title nparLD Test of Efficacy — npld","text":"X_c Longitudinal Data placebo dimension \\((n_x, K, T)\\), \\(n_x\\) number patients placebo gorup, K number outcomes, T number time points Y_c Longitudinal Data Treatment dimension \\((n_y, K, T)\\), \\(n_y\\) number patients treatment gorup, K number outcomes, T number time points","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/npld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title nparLD Test of Efficacy — npld","text":"vector p-values, length number outcomes","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/npld.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Title nparLD Test of Efficacy — npld","text":"Noguchi, K., Gel, Y. R., Brunner, E., & Konietschke, F. (2012). nparLD: R software package nonparametric analysis longitudinal data factorial experiments. Journal Statistical software, 50, 1-23.","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/npld.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title nparLD Test of Efficacy — npld","text":"","code":"library(MASS) library(nparLD) #> Warning: package 'nparLD' was built under R version 4.4.2 xm = -t(cbind(c(0, 0.738, 1.313, 3.109, 4.525, 5.864, 7.338),           c(0, 0.668, 3.975, 5.931, 8.259, 11.989, 13.976))) xs = t(cbind(c(0, 4.79, 5.43, 6.54, 7.37, 8.15, 9.11),           c(0, 10.27, 12.85, 14.95, 15.35, 16.87, 18.19))) N = 100 # Total Number of Patients nx = 2/5*N # Niumber of patients in Placebo ny = 3/5*N # Number of patients in Treatment K = 2 # Number of Outcomes T = 6 # Number of visits other than baseline sigma_u <- c(3.477, 7.232) # Random Effect Standard Deviation for Outcomes corr <- matrix(c(1,0.5, 0.5, 1),2,2)  # Correlation between the outcomes sigma = diag(sigma_u) %*% corr %*% diag(sigma_u) alpha=1 beta=1 effect_size_1 = 2.21*alpha/6 effect_size_2 = 5.38*beta/6 ym = xm + t(cbind(c(0,(rep(effect_size_1,6))), c(0,(rep(effect_size_2,6))))) X_placebo = array(NA, dim = c(nx, 2, 7)) X_dose_1 = array(NA, dim = c(ny, 2, 7))  for(i in 1:nx){   X_placebo[i,,] = gen.fun.dep(xm, xs, corr, sigma) } for(i in 1:ny){   X_dose_1[i,,] = gen.fun.dep(ym, xs, corr, sigma) } X_c = X_placebo Y_c = X_dose_1 npld(X_c, Y_c) #>  F1 LD F1 Model  #>  -----------------------  #>  Check that the order of the time and group levels are correct. #>  Time level:   0 1 2 3 4 5 6  #>  Group level:   0 1  #>  If the order is not correct, specify the correct order in time.order or group.order. #>  #>  #>  Warning(s): #>  The covariance matrix is singular.  #>  F1 LD F1 Model  #>  -----------------------  #>  Check that the order of the time and group levels are correct. #>  Time level:   0 1 2 3 4 5 6  #>  Group level:   0 1  #>  If the order is not correct, specify the correct order in time.order or group.order. #>  #>  #>  Warning(s): #>  The covariance matrix is singular.  #> [1] 0.06541633 0.23247954"},{"path":"https://djghosh1123.github.io/LRST/reference/sampSize.html","id":null,"dir":"Reference","previous_headings":"","what":"Title Minimum Sample Size required to obtain a given power — sampSize","title":"Title Minimum Sample Size required to obtain a given power — sampSize","text":"Title Minimum Sample Size required obtain given power","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/sampSize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title Minimum Sample Size required to obtain a given power — sampSize","text":"","code":"sampSize(pi, xm, ym, alpha, C, D, lambda)"},{"path":"https://djghosh1123.github.io/LRST/reference/sampSize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title Minimum Sample Size required to obtain a given power — sampSize","text":"pi Required Power xm Placebo mean matrix size K * T. ym Treatment mean matrix size K * T alpha Size Test C Theoretical C matrix D Theoretical D matrix lambda nx/ny nx ny number patients placebo treatment groups respectively","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/sampSize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title Minimum Sample Size required to obtain a given power — sampSize","text":"Minium Sample Size","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/theoretical_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Title Theoretical Power when C and D are known — theoretical_power","title":"Title Theoretical Power when C and D are known — theoretical_power","text":"Title Theoretical Power C D known","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/theoretical_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title Theoretical Power when C and D are known — theoretical_power","text":"","code":"theoretical_power(alpha = 0.05, effect_size, nx, ny, K, T, C, D)"},{"path":"https://djghosh1123.github.io/LRST/reference/theoretical_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title Theoretical Power when C and D are known — theoretical_power","text":"alpha Size Test effect_size Theoretical Effect Size nx Number patients plcabo group ny Number patients treatment group K Number outcomes T Number Time Points C Theoretical C matrix D Theoretica; D matrix","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/theoretical_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title Theoretical Power when C and D are known — theoretical_power","text":"Theoretical Power","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/theoretical_power.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Title Theoretical Power when C and D are known — theoretical_power","text":"Ghosh, D., Xu, X., Luo, S. (2025). Power sample size calculation multivariate longitudinal trials using longitudinal rank sum test. arXiv preprint arXiv:2502.07152.","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/theoretical_power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title Theoretical Power when C and D are known — theoretical_power","text":"","code":"N = 500 # Total Number of Patients nx = 2/5*N # Niumber of patients in Placebo ny = 3/5*N # Number of patients in Treatment K = 2 # Number of Outcomes T = 6 # Number of visits other than baseline C = matrix(rnorm(T^2), nrow = T) D = matrix(rnorm(T^2), nrow = T) theoretical_power(alpha = 0.05, effect_size = 1, nx, ny, K, T+1, C, D) #>      [,1] #> [1,]    1"},{"path":"https://djghosh1123.github.io/LRST/reference/theta.bar.theo.html","id":null,"dir":"Reference","previous_headings":"","what":"Title Theoretical Relative Treatment Effect Size Under Gaussianity Assumption — theta.bar.theo","title":"Title Theoretical Relative Treatment Effect Size Under Gaussianity Assumption — theta.bar.theo","text":"Title Theoretical Relative Treatment Effect Size Gaussianity Assumption","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/theta.bar.theo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title Theoretical Relative Treatment Effect Size Under Gaussianity Assumption — theta.bar.theo","text":"","code":"theta.bar.theo(xm, ym, xs, n.iter = 1000)"},{"path":"https://djghosh1123.github.io/LRST/reference/theta.bar.theo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title Theoretical Relative Treatment Effect Size Under Gaussianity Assumption — theta.bar.theo","text":"xm Placebo Mean ym Treatment Mean xs Placebo Standard Deviation n.iter Number iteartions","code":""},{"path":"https://djghosh1123.github.io/LRST/reference/theta.bar.theo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title Theoretical Relative Treatment Effect Size Under Gaussianity Assumption — theta.bar.theo","text":"","code":"xm = -t(cbind(c(0, 0.738, 1.313, 3.109, 4.525, 5.864, 7.338),               c(0, 0.668, 3.975, 5.931, 8.259, 11.989, 13.976))) xs = t(cbind(c(0, 4.79, 5.43, 6.54, 7.37, 8.15, 9.11),               c(0, 10.27, 12.85, 14.95, 15.35, 16.87, 18.19))) alpha=1 beta=1 effect_size_1 = 2.21*alpha/6 effect_size_2 = 5.38*beta/6 ym = xm + t(cbind(c(0,(rep(effect_size_1,6))), c(0,(rep(effect_size_2,6))))) theta.bar.theo(xm, ym, xs, n.iter=10) #> [1] 0.11075"}]
